export const data = JSON.parse("{\"key\":\"v-3548d8cf\",\"path\":\"/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/TypeScript/TS%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html\",\"title\":\"TS面向对象\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"TS面向对象\",\"summary\":\"Object 在 ts 中对象的定义不是key to value 键值对，而是 key to type 键类型对 Interface 在 TypeScript 中，我们使用接口（Interfaces）来定义对象的类型 在面向对象语言中，接口（Interfaces）是一个很重要的概念，它是对行为的抽象，而具体如何行动需要由类（classes）去实现（imple\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://zfhblog.top/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/TypeScript/TS%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"ZFH's Blog\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"TS面向对象\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}]]},\"excerpt\":\"\",\"headers\":[{\"level\":2,\"title\":\"Object\",\"slug\":\"object\",\"link\":\"#object\",\"children\":[]},{\"level\":2,\"title\":\"Interface\",\"slug\":\"interface\",\"link\":\"#interface\",\"children\":[{\"level\":3,\"title\":\"可选属性\",\"slug\":\"可选属性\",\"link\":\"#可选属性\",\"children\":[]},{\"level\":3,\"title\":\"任意属性\",\"slug\":\"任意属性\",\"link\":\"#任意属性\",\"children\":[]},{\"level\":3,\"title\":\"只读属性\",\"slug\":\"只读属性\",\"link\":\"#只读属性\",\"children\":[]}]},{\"level\":2,\"title\":\"Class\",\"slug\":\"class\",\"link\":\"#class\",\"children\":[{\"level\":3,\"title\":\"基础概念\",\"slug\":\"基础概念\",\"link\":\"#基础概念\",\"children\":[]},{\"level\":3,\"title\":\"Access Modifiers\",\"slug\":\"access-modifiers\",\"link\":\"#access-modifiers\",\"children\":[]},{\"level\":3,\"title\":\"readonly\",\"slug\":\"readonly\",\"link\":\"#readonly\",\"children\":[]}]},{\"level\":2,\"title\":\"抽象类\",\"slug\":\"抽象类\",\"link\":\"#抽象类\",\"children\":[]},{\"level\":2,\"title\":\"类的类型\",\"slug\":\"类的类型\",\"link\":\"#类的类型\",\"children\":[{\"level\":3,\"title\":\"类实现接口\",\"slug\":\"类实现接口\",\"link\":\"#类实现接口\",\"children\":[]}]},{\"level\":2,\"title\":\"Generics\",\"slug\":\"generics\",\"link\":\"#generics\",\"children\":[{\"level\":3,\"title\":\"简单的例子\",\"slug\":\"简单的例子\",\"link\":\"#简单的例子\",\"children\":[]}]},{\"level\":2,\"title\":\"多个类型参\",\"slug\":\"多个类型参\",\"link\":\"#多个类型参\",\"children\":[]},{\"level\":2,\"title\":\"泛型约束\",\"slug\":\"泛型约束\",\"link\":\"#泛型约束\",\"children\":[]},{\"level\":2,\"title\":\"泛型接口\",\"slug\":\"泛型接口\",\"link\":\"#泛型接口\",\"children\":[]},{\"level\":2,\"title\":\"泛型类\",\"slug\":\"泛型类\",\"link\":\"#泛型类\",\"children\":[]},{\"level\":2,\"title\":\"泛型参数的默认类型\",\"slug\":\"泛型参数的默认类型\",\"link\":\"#泛型参数的默认类型\",\"children\":[]}],\"readingTime\":{\"minutes\":10.47,\"words\":3141},\"filePathRelative\":\"前端开发/TypeScript/TS面向对象.md\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
